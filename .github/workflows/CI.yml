name: CI
on:
  push:
    branches:
      - master
      - dev
env:
  GKSwstype: 100
jobs:
  test:
    name: Test ${{ matrix.title }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - title: 'Linux - latest'
            os: ubuntu-latest
            version: '1'
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Instantiate
        run: julia --project=. -e 'using Pkg; Pkg.instantiate()'
      - name: Run tests
        run: julia --project=. --color=auto --startup-file=yes --code-coverage="user" --depwarn="yes" --check-bounds="yes" -e 'include("test/runtests.jl")'
      - uses: julia-actions/julia-processcoverage@v1
      - name: Summarize coverage
        run: julia --project=. -e 'using QuantumControlTestUtils; show_coverage();'
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
  codestyle:
    name: Codestyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Install JuliaFormatter and format
        # This will use the latest version by default but you can set the version like so:
        #
        # julia  -e 'using Pkg; Pkg.add(PackageSpec(name="JuliaFormatter", version="0.13.0"))'
        run: |
          julia  -e 'using Pkg; Pkg.add(PackageSpec(name="JuliaFormatter"))'
          julia  -e 'using JuliaFormatter; format(".", verbose=true)'
      - name: Format check
        run: |
          julia -e '
          out = Cmd(`git diff --name-only`) |> read |> String
          if out == ""
              exit(0)
          else
              @error "Some files have not been formatted !!!"
              write(stdout, out)
              exit(1)
          end'
